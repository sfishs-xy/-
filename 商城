import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Dialog, DialogContent, DialogTrigger } from "@/components/ui/dialog";

const products = [
  { id: 1, name: "本子", price: 19.9, image: "https://via.placeholder.com/150", description: "简洁实用的玻璃水杯。" },
  { id: 2, name: "笔记本", price: 29.9, image: "https://via.placeholder.com/150", description: "极简风格的办公笔记本。" },
  { id: 3, name: "小花花", price: 39.9, image: "https://via.placeholder.com/150", description: "现代风格，舒适靠枕。" },
];

export default function Shop() {
  const [cart, setCart] = useState([]);
  const [keyword, setKeyword] = useState("");
  const [user, setUser] = useState(null);
  const [selectedProduct, setSelectedProduct] = useState(null);
  const [adminProduct, setAdminProduct] = useState({ name: "", price: "", image: "", description: "" });

  const addToCart = (product) => {
    setCart((prev) => [...prev, product]);
  };

  const totalPrice = cart.reduce((sum, item) => sum + item.price, 0);

  const filteredProducts = products.filter((p) => p.name.includes(keyword.trim()));

  const login = (e) => {
    e.preventDefault();
    const username = e.target.username.value;
    setUser({ name: username });
  };

  return (
    <div className="p-6 bg-gray-50 min-h-screen text-gray-800">
      <h1 className="text-2xl font-bold mb-4 text-center">简约商城</h1>

      {!user && (
        <form onSubmit={login} className="mb-6 flex flex-col items-center gap-2">
          <Input name="username" placeholder="请输入用户名登录" className="max-w-xs" />
          <Button type="submit" className="bg-gray-800 text-white hover:bg-gray-700">登录</Button>
        </form>
      )}

      {user && <div className="mb-4 text-center text-lg">欢迎，{user.name}</div>}

      <div className="mb-6 flex justify-center">
        <Input
          placeholder="搜索商品..."
          value={keyword}
          onChange={(e) => setKeyword(e.target.value)}
          className="max-w-md"
        />
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        {filteredProducts.map((product) => (
          <Card key={product.id} className="rounded shadow-sm border border-gray-200 bg-white">
            <img src={product.image} alt={product.name} className="rounded-t w-full h-40 object-cover" />
            <CardContent className="p-4">
              <h2 className="text-lg font-semibold mb-1">{product.name}</h2>
              <p className="text-sm text-gray-600 mb-2">¥{product.price.toFixed(2)}</p>
              <Dialog>
                <DialogTrigger asChild>
                  <Button variant="outline" className="w-full mb-2">查看详情</Button>
                </DialogTrigger>
                <DialogContent>
                  <h3 className="text-lg font-bold mb-2">{product.name}</h3>
                  <p className="mb-2 text-sm text-gray-600">{product.description}</p>
                  <img src={product.image} alt={product.name} className="w-full rounded" />
                </DialogContent>
              </Dialog>
              <Button className="w-full bg-gray-800 text-white hover:bg-gray-700" onClick={() => addToCart(product)}>
                加入购物车
              </Button>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="mt-10 p-6 border rounded shadow bg-white">
        <h2 className="text-lg font-bold mb-4">购物车</h2>
        {cart.length === 0 ? (
          <p>购物车为空</p>
        ) : (
          <ul className="space-y-2">
            {cart.map((item, index) => (
              <li key={index} className="flex justify-between text-sm">
                <span>{item.name}</span>
                <span>¥{item.price.toFixed(2)}</span>
              </li>
            ))}
          </ul>
        )}
        <div className="mt-4 text-right font-semibold text-gray-800">总价：¥{totalPrice.toFixed(2)}</div>
        {cart.length > 0 && <Button className="mt-4 w-full bg-gray-700 text-white hover:bg-gray-600">模拟结账</Button>}
      </div>

      {user?.name === "admin" && (
        <div className="mt-10 p-6 border rounded shadow bg-gray-100">
          <h2 className="text-lg font-bold mb-4">后台管理</h2>
          <form className="space-y-2">
            <Input placeholder="商品名称" value={adminProduct.name} onChange={(e) => setAdminProduct({ ...adminProduct, name: e.target.value })} />
            <Input placeholder="商品价格" value={adminProduct.price} onChange={(e) => setAdminProduct({ ...adminProduct, price: e.target.value })} />
            <Input placeholder="图片地址 URL" value={adminProduct.image} onChange={(e) => setAdminProduct({ ...adminProduct, image: e.target.value })} />
            <Input placeholder="商品描述" value={adminProduct.description} onChange={(e) => setAdminProduct({ ...adminProduct, description: e.target.value })} />
            <Button className="bg-gray-800 text-white hover:bg-gray-700">添加商品（仅示意）</Button>
          </form>
        </div>
      )}
    </div>
  );
}
